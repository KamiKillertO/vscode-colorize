{
  "name": "vscode-colorize",
  "displayName": "colorize",
  "description": "A vscode extension to help visualize css colors in files.",
  "version": "0.8.16",
  "publisher": "kamikillerto",
  "license": "Apache-2.0",
  "icon": "assets/logo.png",
  "engines": {
    "vscode": "^1.39.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "color",
    "css",
    "hexa",
    "hsl",
    "rgb",
    "preprocessor"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/kamikillerto/vscode-colorize.git"
  },
  "bugs": {
    "url": "https://github.com/kamikillerto/vscode-colorize/issues"
  },
  "homepage": "https://github.com/kamikillerto/vscode-colorize/blob/master/README.MD",
  "galleryBanner": {
    "theme": "light"
  },
  "activationEvents": [
    "*"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "configuration": {
      "title": "Colorize",
      "properties": {
        "colorize.languages": {
          "default": [
            "css",
            "sass",
            "scss",
            "less",
            "postcss",
            "sss",
            "stylus",
            "xml",
            "svg"
          ],
          "title": "Colorize files with these languages",
          "type": "array",
          "markdownDescription": "Configure a list of languages that should be colorized. A list of languages can be find at https://code.visualstudio.com/docs/languages/identifiers. You can learn about languages at https://code.visualstudio.com/docs/languages/overview."
        },
        "colorize.files_extensions": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "default": [],
          "title": "Colorize files with these extensions",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\.\\w+$",
            "uniqueItems": true,
            "description": "You should enter a valid file extension"
          },
          "markdownDescription": "[deprecated] Specified a list of files extension that should be colorized. This setting is deprecated and will be removed soon, you should use the setting `colorize.include` instead."
        },
        "colorize.ignore_files_extensions_deprecation": {
          "default": false,
          "type": "boolean",
          "markdownDescription": "Ignore the warning for `colorize.files_extensions`."
        },
        "colorize.include": {
          "type": "array",
          "markdownDescription": "Configure glob patterns for including files and folders. By default Colorize is enable for files matching one the languages defined in the `colorize.languages` config, with this config you can enable colorize for other files or folders. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
          "default": [],
          "scope": 3,
          "additionalProperties": {
            "anyOf": [
              {
                "type": "array",
                "properties": {
                  "when": {
                    "type": "string",
                    "pattern": "\\w*\\$\\(basename\\)\\w*",
                    "default": "$(basename).ext",
                    "description": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."
                  }
                }
              }
            ]
          }
        },
        "colorize.exclude": {
          "type": "array",
          "markdownDescription": "Configure glob patterns for excluding files and folders. Colorize will not colorized colors in these files and folders and it'll also not search for variables inside. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
          "default": [
            "**/.git",
            "**/.svn",
            "**/.hg",
            "**/CVS",
            "**/.DS_Store",
            "**/.git",
            "**/node_modules",
            "**/bower_components",
            "**/tmp",
            "**/dist",
            "**/tests"
          ],
          "scope": 3,
          "additionalProperties": {
            "anyOf": [
              {
                "type": "array",
                "properties": {
                  "when": {
                    "type": "string",
                    "pattern": "\\w*\\$\\(basename\\)\\w*",
                    "default": "$(basename).ext",
                    "description": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."
                  }
                }
              }
            ]
          }
        },
        "colorize.hide_current_line_decorations": {
          "title": "Hide current line decorations",
          "default": true,
          "type": "boolean",
          "markdownDescription": "Hide colors for the current line. Set to `false` to turn it off"
        },
        "colorize.colorized_variables": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "default": [
            "CSS"
          ],
          "items": {
            "enum": [
              "CSS",
              "SASS",
              "LESS",
              "STYLUS"
            ],
            "description": "You should enter a valid extractor",
            "uniqueItems": true
          },
          "title": "Extract these type of variables",
          "type": "array",
          "markdownDescription": "You can specified the type of variables that should be colorized by the extension."
        },
        "colorize.colorized_colors": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "default": [
            "BROWSERS_COLORS",
            "HEXA",
            "RGB",
            "HSL"
          ],
          "items": {
            "enum": [
              "BROWSERS_COLORS",
              "HEXA",
              "RGB",
              "HSL",
              "ARGB"
            ],
            "description": "You should enter a valid extractor",
            "uniqueItems": true
          },
          "title": "Colorize these type of color",
          "type": "array",
          "markdownDescription": "You can specified the type of color that should be colorized by the extension.\nAvailable colors are:\n* `HEXA`: for hexadecimal colors: `#RGB`, `#RGBA`, `#RRGGBB`, `#RRGGBBAA`, `0xRGB`, `0xRGBA`, `0xRRGGBB` or `0xRRGGBBAA`\n* `ARGB`: for argb colors: `#RGB`, `#ARGB`, `#RRGGBB` or `#AARRGGBB`\n* `RGB`: for rgb colors: `rgb(r,g,b)` or `rgba(r,g,b,a)`\n* `HSL`: for HSL colors: `hsl(h,s,l)` or `hsla(h,s,l,a)`\n* `BROWSERS_COLORS`: for native browser's colors like `white`, `red`, `blue`..."
        },
        "colorize.colorize_only_visible_beta": {
          "default": false,
          "type": "boolean",
          "markdownDescription": "By default all colors in a file are colorized and updated when needed, with this feature only what you see will be colorized/updated. ⚠️ This feature is still in beta, please report any bug [here](https://github.com/KamiKillertO/vscode-colorize/issues). ⚠️ A reload is required after any change to this setting."
        },
        "colorize.enable_search_variables": {
          "title": "Enable the search for variables at opening time",
          "default": true,
          "type": "boolean",
          "markdownDescription": "When vscode starts, Colorize fetch all files targeted by the settings `colorize.include`, `colorize.languages` and `colorize.files_extensions` but not the ones targeted by the setting `colorize.exclude`. When the fetch is done, colorize open and parse all files searching for variables. That way variables will be colorized in every files. _⚠️ this setting can slown down your editor a little at opening time, read this [issue](https://github.com/KamiKillertO/vscode-colorize/issues/174) to learn more about it._"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "lint": "node ./node_modules/.bin/tslint -c tslint.json --project tsconfig.json",
    "test": "node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/chai": "4.2.14",
    "@types/mocha": "7.0.1",
    "@types/node": "8.5.2",
    "chai": "4.2.0",
    "typescript": "3.3.3",
    "mocha": "5.2.0",
    "tslint": "5.12.1",
    "vscode": "1.1.36"
  },
  "dependencies": {
    "glob-to-regexp": "^0.4.1"
  }
}
